import argparse

from core_data_modules.traced_data import TracedData
from core_data_modules.traced_data.io import TracedDataJsonIO
from core_data_modules.util import IOUtils

from project_reach import CombineRawDatasets
from project_reach.auto_code_show_messages import AutoCodeShowMessages

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Runs the post-fetch phase of the REACH pipeline")

    parser.add_argument("user", help="User launching this program")

    parser.add_argument("raw_messages_input_path", metavar="raw-messages-input-path",
                        help="Path to the input messages JSON file, containing a list of serialized TracedData objects")
    parser.add_argument("raw_surveys_input_path", metavar="raw-surveys-input-path",
                        help="Path to the cleaned survey JSON file, containing a list of serialized TracedData objects")
    parser.add_argument("prev_coded_dir_path", metavar="prev-coded-dir-path",
                        help="Directory containing Coda files generated by a previous run of this pipeline. "
                             "New data will be appended to these files.")

    parser.add_argument("json_output_path", metavar="json-output-path",
                        help="Path to a JSON file to write TracedData for final analysis file to")
    parser.add_argument("icr_output_path", metavar="icr-output-path",
                        help="Path to a CSV file to write 200 messages and run ids to, for use in inter-coder "
                             "reliability evaluation")
    parser.add_argument("coded_dir_path", metavar="coded-dir-path",
                        help="Directory to write coded Coda files to")

    args = parser.parse_args()
    user = args.user
    raw_messages_input_path = args.raw_messages_input_path
    raw_surveys_input_path = args.raw_surveys_input_path
    prev_coded_dir_path = args.prev_coded_dir_path
    json_output_path = args.json_output_path
    icr_output_path = args.icr_output_path
    coded_dir_path = args.coded_dir_path

    # Load messages
    print("Load messages")
    with open(raw_messages_input_path, "r") as f:
        messages = TracedDataJsonIO.import_json_to_traced_data_iterable(f)

    # Load surveys
    print("Load Surveys")
    with open(raw_surveys_input_path, "r") as f:
        surveys = TracedDataJsonIO.import_json_to_traced_data_iterable(f)

    # Add survey data to the messages
    print("Combine Datasets")
    CombineRawDatasets.combine_raw_datasets(user, messages, surveys)
    data = messages

    print("Auto Code Messages")
    prev_coda_path = "{}/esc4jmcna_activation.csv".format(prev_coded_dir_path)
    coda_output_path = "{}/esc4jmcna_activation.csv".format(coded_dir_path)
    data = AutoCodeShowMessages.auto_code_show_messages(user, data, icr_output_path, coda_output_path, prev_coda_path)

    # Write json output
    print("Write Output")
    IOUtils.ensure_dirs_exist_for_file(json_output_path)
    with open(json_output_path, "w") as f:
        TracedDataJsonIO.export_traced_data_iterable_to_json(data, f, pretty_print=True)
